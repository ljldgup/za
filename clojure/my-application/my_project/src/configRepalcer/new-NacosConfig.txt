package com.agioe.atm.domain.monitoring.alarm.util;

import com.alibaba.nacos.api.config.annotation.NacosValue;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;

/**
 * 配置文件读取（nacos）---全部参数
 * topic消息未找到合适的方式，先不修改
 *
 * @author zhye
 * @since 2019/10/24
 */
@Component
public class NacosConfig {
    /**
     * 组织编码
     */
    
    public String organizationCode="G01C01M01";

    /**
     * 事件稀疏-开关
     */
    
    public Boolean eventWaveEnable=true;

    /**
     * 事件稀疏-值参数
     */
    
    public float eventWaveVal=0.05;

    /**
     * 事件参数（单位 毫秒）
     */
    
    public long eventWaveTime=300000;

    /**
     * 提示类事件自动存入历史 注意此处的配置是反的，即此处配置的事件类别的事件存实时，而没配的存入历史
     */
    
    public String autoToHistory="EVT01,EVT02,EVT03";

    /**
     * 数据采集周期 毫秒
     */
    
    public long collectPeriod=60000;

    /**
     * 没有数据波动时数据存储间隔，毫秒
     */
    
    public long noDataPeriod=1200000;

    /**
     * 数据查询时判断超时时间，毫秒
     */
    
    public long collectOverTime=900000;

    /**
     * 特殊设备类型的超时时间配置，格式必须是：设备类型1,时间1,设备类型2,时间2,...,设备类型n,时间n
     */
    
    public String specialOverTimes=;

    /**
     * 曲线点数上限
     */
    
    public long numLimitUp=300;

    /**
     * 本地控制判断范围 单位毫秒
     */
    
    public long localControl=30000;

    /**
     * 是否开启自动处理
     */
    
    public int isAutoProcess=1;

    /**
     * 自动处理：优先关闭的事件等级
     */
    
    public String autoProcessLevel="3,4";

    /**
     * 自动处理：向前推该天数为 需处理的事件发生截止日期
     */
    
    public int autoProcessDay=3;

    /**
     * 自动处理：实时事件表中事件总数上限
     */
    
    public long autoProcessLimit=200;

    /**
     * 撤防状态的设备，可以产生的事件对应的事件码
     */
    
    public String disarmedEventCodes="ET012+FAULT+1,ET007+ALARM+1,ET012+ALARM+1";

    /**
     * 推送功能开关
     */
    
    public Boolean pushEnable=true;

    /**
     * 风险评估
     */
    
    public Boolean riskEnable=false;

    /***
     * redis实时数据缓存初始化时，查询点号数据时间范围（当前时间向前推），单位小时
     */
    
    public int redisInitTimeBefore=0;

    /**
     * 电缆监测菜单树编码
     */
    
    public String cableMonitorMenuTreeCode="CRT05";

    
    public Boolean bigDataLogOpen=false;

    /**
     * 电缆监测 相位度数页面展示时度数合并参考值
     */
    
    public int phaseDegreeMergeSize=1;

    //机器人相关开始
    /**
     * 是否初始化机器人客户端
     */
    
    public Boolean initRobotClient=true;

    /**
     * 文件服务器上传地址
     */
    
    public String fileServerUploadUrl="http://192.168.15.42:8020/file/upload";

    /**
     * 文件服务器删除地址
     */
    
    public String fileServerDeleteUrl="http://192.168.15.42:8020/file/delete";

    /**
     * 机器人视频数据保存天数
     */
    
    public Integer robotHisVideoKeepTime=1;

    /**
     * 文件服务器对应appKey
     */
    
    public String robotFileServerAppKey="57f5c5b7-b21e-4fe1-bb19-d0dc558435ea";

    /**
     * 文件服务器对应appToken
     */
    
    public String robotFileServerAppToken="e0acdd34-6c25-4935-b159-57484f49a212";

    /**
     * 机器人实时数据超时时间(单位毫秒)
     */
    
    public Long robotRealTimeDataOverTime=30000;

    /**
     * 机器人设备类型编码
     */
    
    public String equipTypeRobot="ET093";

    /**
     * 机器人树节点类型
     */
    
    public String treeNodeTypeTunnel="TUNNEL";

    /**
     * 系统级联关系类型编号
     */
    
    public String treeTypeCodeRobot="CRT60";

    /**
     * 机器人联动轮询周期
     */
    
    public Integer robotLinkageSchedule=10000;

    /**
     * 机器人联动轮询超时时间
     */
    
    public Integer robotLinkageQueryTime=1800000;

    /**
     * 机器人联动确认报警超时时间
     */
    
    public Integer robotLinkageConfirmTime=3600000;

    /**
     * 机器人图片下载次数
     */
    
    public Integer robotImgDownLoadTimes=5;

    /**
     * 机器人视频下载次数
     */
    
    public Integer robotVideoDownLoadTimes=10;

    /**
     * 机器人全程录像下载次数
     */
    
    public Integer robotWholeVideoDownLoadTimes=5;

    /**
     * 机器人定时轮训滞后时间,单位min
     */
    
    public Integer robotHisDataQueryDelayTime=30;

    /**
     * 数据权限开关
     */
    
    public Boolean dataRoleActive=false;

    /**
     * 最大放电量计算时，放电量由大到小排序后，忽略的数据的比例
     */
    
    public Double maxQIgnoreRatio=0.05;


    /**
     * 是否启用通知详细的事件描述信息
     */
    
    public Boolean notifyFullDescEnable=true;
}
